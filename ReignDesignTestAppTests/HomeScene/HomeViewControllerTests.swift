//
//  HomeViewControllerTests.swift
//  ReignDesignTestApp
//
//  Created by Juli√°n Arias on 15-09-18.
//  Copyright (c) 2018 Maetschl. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import ReignDesignTestApp
import XCTest

class HomeViewControllerTests: XCTestCase {
    // MARK: Subject under test
    var sut: HomeViewController!
    var window: UIWindow!
    let TEST_STRING = "Test string"

    // MARK: Test lifecycle

    override func setUp() {
        super.setUp()
        window = UIWindow()
        setupHomeViewController()
    }

    override func tearDown() {
        window = nil
        super.tearDown()
    }

    // MARK: Test setup
    
    func setupHomeViewController() {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "HomeViewController") as! HomeViewController
    }

    func loadView() {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }

    // MARK: Test doubles

    class HomeBusinessLogicSpy: HomeBusinessLogic {
        var getNewsWasCalled = false
        func getNews() {
            getNewsWasCalled = true
        }
    }

    // MARK: Tests

    func testDisplayOneNews() {
        // Given
        let newDisplayedData = Home.NewsList.ViewModel.NewsDisplayedData(title: TEST_STRING, info: TEST_STRING)
        let viewModel = Home.NewsList.ViewModel(news: [newDisplayedData])

        // When
        sut.displayNews(viewModel: viewModel)

        // Then
        XCTAssertEqual(1, sut.news.count, "News are 1")
    }

    func testDisplayNewsEmpty() {
        // Given
        let viewModel = Home.NewsList.ViewModel(news: [])

        // When
        sut.displayNews(viewModel: viewModel)

        // Then
        XCTAssertEqual(0, sut.news.count, "News are 0")
    }

    // MARK: Test cell

    func testCellDisplay() {
        // Given
        let newsArraw = [Home.NewsList.ViewModel.NewsDisplayedData(title: TEST_STRING, info: TEST_STRING)]
        let viewModel = Home.NewsList.ViewModel(news: newsArraw)

        // When
        sut.news = viewModel.news
        let cell = sut.tableView(sut.tableView, cellForRowAt: IndexPath(row: 0, section: 0))

        // Then
        XCTAssertEqual(cell.detailTextLabel?.text, TEST_STRING)
        XCTAssertEqual(cell.textLabel?.text, TEST_STRING)
    }
}
