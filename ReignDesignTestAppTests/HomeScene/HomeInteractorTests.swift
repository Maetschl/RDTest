//
//  HomeInteractorTests.swift
//  ReignDesignTestApp
//
//  Created by Juli√°n Arias on 15-09-18.
//  Copyright (c) 2018 Maetschl. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates from: http://clean-swift.com
//

@testable import ReignDesignTestApp
import XCTest

class HomeInteractorTests: XCTestCase {
    // MARK: Subject under test

    var sut: HomeInteractor!
    var worker: HomeWorkerSpy!
    var presenter: HomePresentationLogicSpy!

    // MARK: Test lifecycle

    override func setUp() {
        super.setUp()
        setupHomeInteractor()
    }

    override func tearDown() {
        super.tearDown()
    }

    // MARK: Test setup

    func setupHomeInteractor() {
        sut = HomeInteractor()
        worker = HomeWorkerSpy()
        sut.worker = worker
        presenter = HomePresentationLogicSpy()
        sut.presenter = presenter
    }

    // MARK: Tests

    func testGetNewsCallApiWorkerGetData() {
        // Given
        let spy = HomePresentationLogicSpy()
        sut.presenter = spy

        // When
        sut.getNews()

        // Then
        XCTAssertTrue(worker.getDataFromApiWasCalled, "getDataFromApi was called from interactor getNews")
    }

    func testGetNewsCallPresentNewsWenWorkerSuccess() {
        // Given
        let spy = HomePresentationLogicSpy()
        sut.presenter = spy
        worker.getDataFromApiShouldReturnError = false

        // When
        sut.getNews()

        // Then
        XCTAssertTrue(worker.getDataFromApiWasCalled, "getDataFromApi was called from interactor getNews")
        XCTAssertTrue(spy.presentSomethingCalled, "PresentNews was called")
    }

    func testGetNewsCallPresentNewsWenWorkerFail() {
        // Given
        let spy = HomePresentationLogicSpy()
        sut.presenter = spy
        worker.getDataFromApiShouldReturnError = true

        // When
        sut.getNews()

        // Then
        XCTAssertTrue(worker.getDataFromApiWasCalled, "getDataFromApi was called from interactor getNews")
        XCTAssertTrue(spy.presentSomethingCalled, "PresentNews was called")
    }
}
